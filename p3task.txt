<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic-Tac-Toe Game</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="game-container">
    <h1>Tic-Tac-Toe</h1>
    <div id="board" class="board">
      <div class="cell" data-index="0"></div>
      <div class="cell" data-index="1"></div>
      <div class="cell" data-index="2"></div>
      <div class="cell" data-index="3"></div>
      <div class="cell" data-index="4"></div>
      <div class="cell" data-index="5"></div>
      <div class="cell" data-index="6"></div>
      <div class="cell" data-index="7"></div>
      <div class="cell" data-index="8"></div>
    </div>
    <div id="status" class="status">
      <p>Player X's turn</p>
      <button id="restartBtn">Restart Game</button>
    </div>
  </div>

  <script src="script.js"></script>
</body>
</html>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Basic reset and layout styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f5f5f5;
}

.game-container {
  text-align: center;
}

.board {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: repeat(3, 100px);
  gap: 5px;
  margin: 20px auto;
}

.cell {
  width: 100px;
  height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  background-color: #fff;
  border: 2px solid #333;
  cursor: pointer;
}

.cell:hover {
  background-color: #f0f0f0;
}

.status {
  margin-top: 20px;
}

button {
  padding: 10px 20px;
  font-size: 1rem;
  cursor: pointer;
}

button:focus {
  outline: none;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
const board = document.getElementById('board');
const cells = Array.from(document.getElementsByClassName('cell'));
const statusText = document.querySelector('#status p');
const restartButton = document.getElementById('restartBtn');

let currentPlayer = 'X';
let gameBoard = ['', '', '', '', '', '', '', '', ''];
let gameOver = false;

// Function to handle cell clicks
function handleCellClick(index) {
  if (gameBoard[index] === '' && !gameOver) {
    gameBoard[index] = currentPlayer;
    cells[index].textContent = currentPlayer;

    if (checkWin()) {
      statusText.textContent = `Player ${currentPlayer} Wins!`;
      gameOver = true;
      return;
    } 

    if (gameBoard.every(cell => cell !== '')) {
      statusText.textContent = 'It\'s a Draw!';
      gameOver = true;
      return;
    }

    currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
    statusText.textContent = `Player ${currentPlayer}'s turn`;
  }
}

// Function to check for a win
function checkWin() {
  const winPatterns = [
    [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
    [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns
    [0, 4, 8], [2, 4, 6] // Diagonals
  ];

  return winPatterns.some(pattern => {
    const [a, b, c] = pattern;
    return gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c];
  });
}

// Function to reset the game
function restartGame() {
  gameBoard = ['', '', '', '', '', '', '', '', ''];
  currentPlayer = 'X';
  gameOver = false;
  cells.forEach(cell => cell.textContent = '');
  statusText.textContent = `Player ${currentPlayer}'s turn`;
}

// Add event listeners to cells
cells.forEach((cell, index) => {
  cell.addEventListener('click', () => handleCellClick(index));
});

// Restart game on button click
restartButton.addEventListener('click', restartGame);
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------